# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices."nix".device =
    "/dev/disk/by-uuid/13bb5138-5e02-46ed-bfea-6f8b73a32ac4";

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/005c89d0-4848-4509-88ae-78f45bc692e7";
    fsType = "btrfs";
    options = [ "compress=zstd:1" "discard=async" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/077B-142B";
    fsType = "vfat";
  };

  boot.initrd.luks.devices."popos-root".device =
    "/dev/disk/by-uuid/9b9ccd4a-70fd-4d3a-ac26-508095f14f70";

  fileSystems."/mnt/popos" = {
    device = "/dev/disk/by-uuid/9147a0e6-e838-4fdb-a82f-c4597bdf80e2";
    fsType = "btrfs";
    options = [ "compress=zstd:1" "discard=async" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.bluetooth.enable = true;

  hardware.opengl = {
    enable = true;
    driSupport = true;
    extraPackages = with pkgs; [ amdvlk ];
    extraPackages32 = [ pkgs.driversi686Linux.amdvlk ];
  };
}
